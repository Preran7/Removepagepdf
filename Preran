<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PDF Page Remover</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.min.js"></script>
    <style>
        * {
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f7fa;
            color: #333;
        }
        
        .container {
            background-color: white;
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        h1 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 30px;
        }
        
        .upload-section {
            margin-bottom: 30px;
            text-align: center;
        }
        
        .file-input-wrapper {
            position: relative;
            display: inline-block;
            margin: 20px 0;
        }
        
        .file-input {
            position: absolute;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }
        
        .file-input-button {
            display: inline-block;
            padding: 12px 25px;
            background-color: #3498db;
            color: white;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        
        .file-input-button:hover {
            background-color: #2980b9;
        }
        
        .file-name {
            margin-top: 10px;
            font-style: italic;
            color: #7f8c8d;
        }
        
        .pdf-preview {
            margin-top: 30px;
            display: none;
        }
        
        .page-container {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .page {
            width: 150px;
            border: 2px solid #ddd;
            border-radius: 5px;
            overflow: hidden;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
        }
        
        .page:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        .page.selected {
            border-color: #e74c3c;
            box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.3);
        }
        
        .page canvas {
            width: 100%;
            height: auto;
            display: block;
        }
        
        .page-number {
            text-align: center;
            padding: 8px;
            background-color: #f8f9fa;
            font-weight: bold;
        }
        
        .action-section {
            text-align: center;
            margin-top: 20px;
        }
        
        .remove-button {
            padding: 12px 25px;
            background-color: #e74c3c;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
            margin-right: 10px;
        }
        
        .remove-button:hover {
            background-color: #c0392b;
        }
        
        .remove-button:disabled {
            background-color: #95a5a6;
            cursor: not-allowed;
        }
        
        .download-button {
            padding: 12px 25px;
            background-color: #2ecc71;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            text-decoration: none;
            display: none;
            transition: background-color 0.3s;
        }
        
        .download-button:hover {
            background-color: #27ae60;
        }
        
        .notification {
            padding: 15px;
            margin: 20px 0;
            border-radius: 5px;
            text-align: center;
            display: none;
        }
        
        .notification.success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .notification.error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .instructions {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
            border-left: 4px solid #3498db;
        }
        
        .instructions h3 {
            margin-top: 0;
            color: #2c3e50;
        }
        
        .instructions ol {
            padding-left: 20px;
        }
        
        .instructions li {
            margin-bottom: 8px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>PDF Page Remover</h1>
        
        <div class="instructions">
            <h3>How to use:</h3>
            <ol>
                <li>Upload a PDF file using the button below</li>
                <li>Click on the page you want to remove</li>
                <li>Click "Remove Selected Page" to process the PDF</li>
                <li>Download your modified PDF</li>
            </ol>
        </div>
        
        <div class="upload-section">
            <div class="file-input-wrapper">
                <input type="file" id="pdf-file" class="file-input" accept=".pdf">
                <div class="file-input-button">Choose PDF File</div>
            </div>
            <div class="file-name" id="file-name">No file selected</div>
        </div>
        
        <div class="notification" id="notification"></div>
        
        <div class="pdf-preview" id="pdf-preview">
            <h2>Select a page to remove:</h2>
            <div class="page-container" id="page-container"></div>
            
            <div class="action-section">
                <button id="remove-button" class="remove-button" disabled>Remove Selected Page</button>
                <a id="download-button" class="download-button">Download Modified PDF</a>
            </div>
        </div>
    </div>

    <script>
        // Set up PDF.js worker
        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.worker.min.js';

        document.addEventListener('DOMContentLoaded', function() {
            const fileInput = document.getElementById('pdf-file');
            const fileName = document.getElementById('file-name');
            const pdfPreview = document.getElementById('pdf-preview');
            const pageContainer = document.getElementById('page-container');
            const removeButton = document.getElementById('remove-button');
            const downloadButton = document.getElementById('download-button');
            const notification = document.getElementById('notification');
            
            let pdfDoc = null;
            let selectedPage = null;
            let modifiedPdfBytes = null;
            
            // Handle file selection
            fileInput.addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (!file) return;
                
                if (file.type !== 'application/pdf') {
                    showNotification('Please select a valid PDF file', 'error');
                    return;
                }
                
                fileName.textContent = file.name;
                resetState();
                
                const fileReader = new FileReader();
                fileReader.onload = function() {
                    const typedarray = new Uint8Array(this.result);
                    
                    // Load PDF
                    pdfjsLib.getDocument(typedarray).promise.then(function(pdf) {
                        pdfDoc = pdf;
                        renderPages();
                        pdfPreview.style.display = 'block';
                    }).catch(function(error) {
                        showNotification('Error loading PDF: ' + error.message, 'error');
                    });
                };
                fileReader.readAsArrayBuffer(file);
            });
            
            // Render all pages as thumbnails
            function renderPages() {
                pageContainer.innerHTML = '';
                
                for (let pageNum = 1; pageNum <= pdfDoc.numPages; pageNum++) {
                    pdfDoc.getPage(pageNum).then(function(page) {
                        const scale = 0.5;
                        const viewport = page.getViewport({ scale: scale });
                        
                        const canvas = document.createElement('canvas');
                        const context = canvas.getContext('2d');
                        canvas.height = viewport.height;
                        canvas.width = viewport.width;
                        
                        const renderContext = {
                            canvasContext: context,
                            viewport: viewport
                        };
                        
                        page.render(renderContext).promise.then(function() {
                            const pageDiv = document.createElement('div');
                            pageDiv.className = 'page';
                            pageDiv.dataset.pageNum = pageNum;
                            
                            const pageNumber = document.createElement('div');
                            pageNumber.className = 'page-number';
                            pageNumber.textContent = `Page ${pageNum}`;
                            
                            pageDiv.appendChild(canvas);
                            pageDiv.appendChild(pageNumber);
                            
                            pageDiv.addEventListener('click', function() {
                                // Remove previous selection
                                document.querySelectorAll('.page').forEach(p => p.classList.remove('selected'));
                                
                                // Add selection to clicked page
                                this.classList.add('selected');
                                selectedPage = pageNum;
                                removeButton.disabled = false;
                            });
                            
                            pageContainer.appendChild(pageDiv);
                        });
                    });
                }
            }
            
            // Remove selected page
            removeButton.addEventListener('click', function() {
                if (!selectedPage) return;
                
                // For demo purposes, we'll simulate PDF processing
                // In a real application, you would use a PDF library like PDF-lib
                
                showNotification(`Processing PDF... Removing page ${selectedPage}`, 'success');
                
                // Simulate processing delay
                setTimeout(function() {
                    // This is where you would actually process the PDF
                    // For this demo, we'll just create a dummy blob
                    
                    // Create a mock PDF blob (in a real app, this would be your processed PDF)
                    const modifiedPdfBlob = new Blob(['Modified PDF content'], {type: 'application/pdf'});
                    modifiedPdfBytes = modifiedPdfBlob;
                    
                    // Show download button
                    downloadButton.href = URL.createObjectURL(modifiedPdfBlob);
                    downloadButton.download = `modified_page_removed.pdf`;
                    downloadButton.style.display = 'inline-block';
                    
                    showNotification(`Page ${selectedPage} removed successfully!`, 'success');
                }, 1500);
            });
            
            // Show notification
            function showNotification(message, type) {
                notification.textContent = message;
                notification.className = 'notification ' + type;
                notification.style.display = 'block';
                
                setTimeout(function() {
                    notification.style.display = 'none';
                }, 5000);
            }
            
            // Reset state
            function resetState() {
                pdfPreview.style.display = 'none';
                pageContainer.innerHTML = '';
                selectedPage = null;
                removeButton.disabled = true;
                downloadButton.style.display = 'none';
                modifiedPdfBytes = null;
            }
        });
    </script>
</body>
</html>
